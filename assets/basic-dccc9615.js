import{S as s,l as u,d as c,g as o}from"./index-fc4fd1da.js";class f extends s{constructor(){super("拳打脚踢","normal",0,0,1/0,"拳打脚踢",1)}get damage(){return Math.max(3+this.power,3)}use(e,t){return super.use()?(u(e,t,this.damage),!0):!1}regenerateDescription(e){return`造成${this.damage+((e==null?void 0:e.attack)??0)}点伤害`}}class h extends s{constructor(){super("王八拳","normal",0,0,1),this.coldDownTurns=1}get damage(){return Math.max(1+this.power,1)}use(e,t,r){return super.use()?(u(e,t,this.damage),r<2?{}:!0):!1}regenerateDescription(e){return`造成${this.damage+((e==null?void 0:e.attack)??0)}伤害3次`}}class d extends s{constructor(){super("打滚","normal",0,0,1,"打滚",1),this.maxUses=2}get stacks(){return 1}get coldDownTurns(){return Math.max(3-this.power,1)}use(e,t){return super.use()?(e.addEffect("闪避",this.stacks),!0):!1}regenerateDescription(e){return`获得${this.stacks}层/effect{闪避}`}}class m extends s{constructor(){super("睡觉","normal",0,0,1,"睡觉",1),this.baseHeal=7,this.coldDownTurns=2}get heal(){return Math.max(this.baseHeal+this.power*3,1)}use(e,t){return super.use()?(e.applyHeal(this.heal),!0):!1}regenerateDescription(e){return`恢复/green{${this.heal}}/named{生命}`}}class p extends s{constructor(){super("睡大觉","normal",1,0,1),this.baseHeal=22,this.coldDownTurns=2}get heal(){return Math.max(this.baseHeal+this.power*20,1)}use(e,t){return super.use()?(e.applyHeal(this.baseHeal),e.addEffect("眩晕",1),!0):!1}regenerateDescription(e){return`恢复/green{${this.heal}}/named{生命}，/effect{眩晕}`}}class g extends s{constructor(){super("活动筋骨","normal",0,0,1),this.stacks=1}use(e,t){return super.use()?(e.addEffect("力量",this.stack),!0):!1}get coldDownTurns(){return Math.max(3-this.power,1)}regenerateDescription(e){return`获得${this.stacks}层/effect{力量}`}}class D extends s{constructor(){super("莽撞攻击","normal",0,0,1)}get coldDownTurns(){return Math.max(1-this.power,0)}use(e,t){return super.use()?(u(e,t,10),c(e,e,3),!0):!1}regenerateDescription(e){return`造成${10+((e==null?void 0:e.attack)??0)}点伤害，受3伤害`}}class k extends s{constructor(){super("抱头防御","normal",0,0,1),this.coldDownTurns=1}get shield(){return Math.max(5+2*this.power,1)}use(e,t){return super.use()?(o(e,e,this.shield),!0):!1}regenerateDescription(e){return`获得${this.shield+((e==null?void 0:e.agility)??0)}护盾`}}class w extends s{constructor(){super("畏手畏脚","normal",0,0,1)}get removeStacks(){return-1+this.power}use(e,t,r){return!this.used&&super.use()?r==0?(e.addEffect("坚固",2),{}):(e.addEffect("力量",this.removeStacks),!0):!1}regenerateDescription(e){return`获得2层/effect{坚固}，${this.removeStacks}层/effect{力量}`}}class x extends s{constructor(){super("匹夫之勇","normal",0,0,1)}use(e,t,r){return super.use()?r==0?(e.addEffect("力量",this.stacks),{}):(e.addEffect("坚固",-3),!0):!1}get stacks(){return Math.max(1,3+this.power)}regenerateDescription(e){return`获得${this.stacks}层/effect{力量}，-3层/effect{坚固}`}}class S extends s{constructor(){super("强撑","normal",1,0,1)}get stacks(){return 7+2*this.power}use(e,t,r){return super.use()?r==0?(e.addEffect("坚固",this.stacks),{}):(e.addEffect("崩溃",2),!0):!1}regenerateDescription(e){return`获得${this.stacks}层/effect{坚固}，2层/effect{崩溃}`}}class T extends s{constructor(){super("快速思考","normal",1,0,1/0,"思考",1)}get coldDownTurns(){return Math.max(0,1-this.power)}findSkillToColdDown(e){let t=null,r=1/0;return e.skills.forEach(a=>{if(a.canColdDown()){const i=Math.abs(a.inBattleIndex-this.inBattleIndex);i<r&&(r=i,t=a)}}),t}canUse(e){return super.canUse(e)?this.findSkillToColdDown(e)!==null:!1}use(e,t){if(super.use()){let r=this.findSkillToColdDown(e);return r?(r.coldDown(),!0):!1}return!1}regenerateDescription(e){return"/named{冷却}1次/named{最近}可冷却技能"}}export{k as AmateurDefense,x as CarelessBravery,D as CarelessPunchKick,T as FastThinking,S as HoldOn,p as LargeSleep,w as OverCarefulDefense,g as PrepareExercise,f as PunchKick,d as Roll,h as RollPunch,m as Sleep};
